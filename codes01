#adatok=read.delim("/Users/eszterkriko/Downloads/gene_result.txt", header = TRUE, sep = "\t")
#colnames(adatok)
##########################innentol################################
adatok=read.csv("/Users/eszterkriko/Downloads/endogenous_human_retrovirus.csv")
colnames(adatok)
dim(adatok)
EntrezUID=adatok[,10]
write.table(EntrezUID, "/Users/eszterkriko/Downloads/EntrezUID_exosome.txt", sep="\t")
Identifiers=adatok[,"Identifiers"]
Identifiers=gsub('GeneID:','',Identifiers)
write.table(Identifiers, "/Users/eszterkriko/Downloads/Identifiers_exosome.txt", sep="\t")

###serveren#######
#R

adatok=read.csv("./endogenous_human_retrovirus.csv")
EntrezUID=adatok[,10]
write.table(EntrezUID, "./EntrezUID_exosome_t.txt", sep="\t")
write.table(EntrezUID, "./EntrezUID_exosome.txt", sep="\n")


##################

##minta####efetch -db protein -format fasta -id AEE52072.1,ADV47642.1 > my_seqs.faa

#names=readLines(EntrezUID_exosome.txt)
#efetch -db protein -format fasta -id $names

##############
cat(EntrezUID, sep=",") #hogy tudom kiírni?

export PATH=$PATH:/data/tools/edirect

#-db protein/gene/nuccore

efetch -db nuccore -format fasta -id 106128902,108004538,388560,100131068,100133791,100859922,111188137,111188141,111188142,111188143,111188144,111188145,111188146,111188147,111188148,111188149,111188150,110006328,105694156,106144559,106144560,106144561,106144562,106144563,106144564,106144565,106144567,106144571,106144572,106144576,106144579,106144580,106144581,106144583,106144587,106144589,106144597,106144603,106144604,106144605,106699568,106707175,100616443,100861467,100862686,100862687,100862689,339476,57612,100616106,100616107,100616108,100616199,100616412,100616462,51581,100862699,106144555,106144566,100862695,100862696,100616104,100862697,100862691,100862700,106144590,106144591,100616197,100616444,100616445,100862698,100616100,100616442,100289683,100616200,100616461,100616198,100616411,100862690,107986101,105376906,105375011,100862683,100862693,103539957,100533728,100887077,100887078,100862694,100616496,51359,100379323,100862688,107984203,107986113,100533725,100616105,100616446,105374013,105373297,105372481,100616102,100862684,60359,105372315,100616103,346547,100507321,619465,105372269,100616497,60358,85314,90625,100862685,105377641,449619,100288413,147664,100616101,100271846,100775105,405754,64006,2086,30816 > my_seqs.faa

ids=(106128902,108004538,388560,100131068,100133791,100859922,111188137,111188141,111188142,111188143,111188144,111188145,111188146,111188147,111188148,111188149,111188150,110006328,105694156,106144559,106144560,106144561,106144562,106144563,106144564,106144565,106144567,106144571,106144572,106144576,106144579,106144580,106144581,106144583,106144587,106144589,106144597,106144603,106144604,106144605,106699568,106707175,100616443,100861467,100862686,100862687,100862689,339476,57612,100616106,100616107,100616108,100616199,100616412,100616462,51581,100862699,106144555,106144566,100862695,100862696,100616104,100862697,100862691,100862700,106144590,106144591,100616197,100616444,100616445,100862698,100616100,100616442,100289683,100616200,100616461,100616198,100616411,100862690,107986101,105376906,105375011,100862683,100862693,103539957,100533728,100887077,100887078,100862694,100616496,51359,100379323,100862688,107984203,107986113,100533725,100616105,100616446,105374013,105373297,105372481,100616102,100862684,60359,105372315,100616103,346547,100507321,619465,105372269,100616497,60358,85314,90625,100862685,105377641,449619,100288413,147664,100616101,100271846,100775105,405754,64006,2086,30816)

ids=(106128902 108004538 388560 100131068 100133791 100859922 111188137 111188141 111188142 111188143 111188144 111188145 111188146 111188147 111188148 111188149 111188150 110006328 105694156 106144559 106144560 106144561 106144562 106144563 106144564 106144565 106144567 106144571 106144572 106144576 106144579 106144580 106144581 106144583 106144587 106144589 106144597 106144603 106144604 106144605 106699568 106707175 100616443 100861467 100862686 100862687 100862689 339476 57612 100616106 100616107 100616108 100616199 100616412 100616462 51581 100862699 106144555 106144566 100862695 100862696 100616104 100862697 100862691 100862700 106144590 106144591 100616197 100616444 100616445 100862698 100616100 100616442 100289683 100616200 100616461 100616198 100616411 100862690 107986101 105376906 105375011 100862683 100862693 103539957 100533728 100887077 100887078 100862694 100616496 51359 100379323 100862688 107984203 107986113 100533725 100616105 100616446 105374013 105373297 105372481 100616102 100862684 60359 105372315 100616103 346547 100507321 619465 105372269 100616497 60358 85314 90625 100862685 105377641 449619 100288413 147664 100616101 100271846 100775105 405754 64006 2086 30816)

ids

for i in ids
do
efetch -db nuccore -id $i -format fasta >$
done

#####innentől lett jó#####
##########serveren###########start
##########download endogen retroviruses###########
#R

ids=("106128902 108004538 388560 100131068 100133791 100859922 111188137 111188141 111188142 111188143 111188144 111188145 111188146 111188147 111188148 111188149 111188150 110006328 105694156 106144559 106144560 106144561 106144562 106144563 106144564 106144565 106144567 106144571 106144572 106144576 106144579 106144580 106144581 106144583 106144587 106144589 106144597 106144603 106144604 106144605 106699568 106707175 100616443 100861467 100862686 100862687 100862689 339476 57612 100616106 100616107 100616108 100616199 100616412 100616462 51581 100862699 106144555 106144566 100862695 100862696 100616104 100862697 100862691 100862700 106144590 106144591 100616197 100616444 100616445 100862698 100616100 100616442 100289683 100616200 100616461 100616198 100616411 100862690 107986101 105376906 105375011 100862683 100862693 103539957 100533728 100887077 100887078 100862694 100616496 51359 100379323 100862688 107984203 107986113 100533725 100616105 100616446 105374013 105373297 105372481 100616102 100862684 60359 105372315 100616103 346547 100507321 619465 105372269 100616497 60358 85314 90625 100862685 105377641 449619 100288413 147664 100616101 100271846 100775105 405754 64006 2086 30816")
ids

new=gsub(" ", "\n", ids)
write(new, "./entrez_ids.txt", sep="\n")


#bash

while read -r line
do
efetch -db nuccore -format fasta -id $line
done < entrez_ids.txt

#vagy##
while read -r line
do
efetch -db nuccore -format fasta -id $line >$line.fa
done < entrez_ids.txt

#######download exosome data#########
#https://www.ncbi.nlm.nih.gov/sra/SRX4954863[accn]
#https://www.ncbi.nlm.nih.gov/sra/SRX4191635[accn]

#https://www.ebi.ac.uk/ena/data/view/PRJNA475497
#https://www.ebi.ac.uk/ena/data/view/PRJNA501808



#https://www.ebi.ac.uk/ena/data/view/PRJNA475497
while read -r line
do
nohup wget $line 
done < my_downloads.txt

###saját  gépemen######
my_data_vol2 = read.delim("/Users/eszterkriko/Downloads/PRJNA501808.txt")
head(my_data_vol2)
##spliteltek#######ujranézni######
new_mydatavol2 = strsplit(my_data_vol2[[1]],split=";")
new_mydatavol2 = str(strsplit(my_data_vol2[[1]],split=";"))
new_mydatavol2=strsplit(ftps, split=";")
new_mydatavol2 = gsub(";", "\\r\\n", ftps)

my_data_2=strsplit(as.character(ftps), ";")
write.csv(my_Data_2, "/Users/eszterkriko/Downloads/my_data_2.csv")

downloadlinks=my_data_vol2$fastq_ftp
write.csv(downloadlinks, "/Users/eszterkriko/Downloads/downloadlinks_vol2.csv")

#https://www.ebi.ac.uk/ena/data/view/PRJNA501808
while read -r line
do
nohup wget $line 
done < my_downloads_vol2.txt

#wget -r -l2 -A.txt ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR116/

wget -r -i2 -A.txt ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR728/000/SRR7288120/SRR7288120.fastq.gz

#wget -r -l2 -A .gz ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR116/
echo wget -r -l3 -A .gz https://www.ebi.ac.uk/ena/data/view/PRJNA475497


wget -r -l2 -A .gz ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR728/000/SRR7288120/SRR7288120.fastq.gz
wget -r -l2 -A .gz https://www.ebi.ac.uk/ena/data/view/PRJNA475497

# Stop on any error. Print the commands as they execute.
#set -uex
# NCBI BioProject ID.
#PRJN={{bioproject.value}}
#
# How many sequencing runs to get for the project.
#RUNS={{runs.value}}
#
# How many reads to download from each run.
#READS={{reads.value}}
#
# Obtain the run information.
#esearch -db sra -query $PRJN | efetch -format runinfo > runinfo.csv
#
# Obtain the first few SRR numbers.
#cat runinfo.csv | cut -f 1 -d , | grep SRR | head -$RUNS > runids.txt
#
# Create a directory for the sequencing data.
#mkdir -p reads

# Download the FASTQ data for each SRR number.
cat runids.txt | parallel fastq-dump --split-files -X $READS -outdir reads {}

####serveren ismet exosome ketoltes####

#
mkdir exosome_data
cd exosome_03/exosome_datawhile 

while read -r line
do
nohup wget $line 
done < my_ebis_01.txt

while read -r line
do
nohup wget $line 
done < my_ebis_02.txt

while read -r line
do
nohup wget $line 
done < my_downloads_vol2.txt

#esearch -db sra -query $PRJN | efetch -format runinfo > runinfo.csv
#cat runinfo.csv | cut -f 1 -d , | grep SRR  > exosome_ids.txt

#PRJN=(PRJNA475497 PRJNA526037)

#export PATH=$PATH:/data/tools/edirect

#for PRJNA in "${PRJN[@]}"
#do
#esearch -db sra -query $PRJNA | efetch --format runinfo |cut -d "," -f 1 > exosome_ids.txt
#done

#esearch -db sra -query $PRJNA | efetch --format runinfo |cut -d "," -f 1 > exosome_ids.txt

#while read -r line
#do
#efetch -db nuccore -format fasta -id $line >$line.fa
#done < exosome_ids.txt

cd exosome_03/exosome_data
export PATH=$PATH:/data/tools/sratoolkit.2.9.2-ubuntu64/bin

while read -r line
do
nohup fastq-dump $line 
done < exosome_ids.txt

#ez kellett
#sed '1d' exosome_ids.txt 

PRJN=(PRJNA475497 PRJNA526037)
for PRJNA in "${PRJN[@]}"
do
fastq-dump $line >$line.fa
done

#ena efetc
#SRA fastq-dump
#sra wget

echo "SRR8133817
SRR8133816
SRR8133815
SRR8133814
SRR8133813
SRR8133812
SRR8133811
SRR8133810
SRR8133809
SRR7288543
SRR7288542
SRR7288541
SRR7288540" > exosome_selected_ids.txt

sort -u exosome_selected_ids.txt| parallel prefetch {}

while read -r line
do
prefetch $line
done < exosome_selected_ids.txt

export PATH=$PATH:/data/tools/edirect

while read -r line
do
efetch -db nuccore -format fasta -id $line >$line.fa
done < exosome_selected_ids.txt

wget -r -l2 -A .gz ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR116/

ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR728/000/SRR7288120/SRR7288120.fastq.gz

wget -i exosome_index.txt

##########serveren###########end

####kraken_build_db#######nem ezzel dolgoztam#########+
#
#kraken-build --download-taxonomy --db $DBNAME

kraken-build --download-taxonomy --db $RETROVIRUSDB


for file in *.fa
do
    kraken-build --add-to-library $file --db $RETROVIRUSDB
done


kraken-build --build --db $kraken-build --build --db $DBNAME
#############################

#######STAR########
#
#########CAT egybe illeszteni#########
#/data/dbs/STAR$ ls
GRCh37_75  GRCh38_83
#bash
#cat File1.txt File2.txt > union.txt
#STAR -- runMode genomeGenerate \
     -- genomeDir ./STARindex \
     -- genomeFastaFiles /data/dbs/STAR/Homo_sapiens.GRCh38.dna.primary_assembly.fa \
     -- sjdbGTFfile /data/dbs/STAR/GRCh38_8Homo_sapiens.GRCh38.83.gtf \
     -- runThreadN 5 
     
     
mkdir STARindex

cp *.fa ./STARindex
cd STARindex

#cat *.fa > all_endogen_retrovirus.fa

export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64

##INDEX###STAR###
STAR -- runMode genomeGenerate \
     -- genomeDir ./STARindex \
     -- genomeFastaFiles *.gz \
     -- sjdbGTFfile /data/dbs/STAR/GRCh38_8Homo_sapiens.GRCh38.83.gtf \
     -- runThreadN 5 
     
     
####EZ jo#####   

export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64

 STAR   --runThreadN 12 \
        --runMode genomeGenerate \
        --genomeDir ./STAR_index \
        --genomeFastaFiles /data/dbs/STAR/GRCh38_83/Homo_sapiens.GRCh38.dna.primary_assembly.fa 
        
        
#########################

cd STARindex
export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64

STAR -- runMode genomeGenerate \
     -- genomeDir ./ \
     -- genomeFastaFiles ./*.fa \
     -- runThreadN 1 
     
#itt egy genome indexet generáltunk, tehát ez egy genomeot tartalmaz   
ls -lh

##illesztes######STAR

export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64

#SRR7288120.fastq #SRR7288180.fastq

SRR72881$i.fastq
20 -> 80

#kiírni fileba megszerkezteni és kimásolni

echo *.fastq >star_ids.txt

cut -d ' ' --output-delimiter=$'\n' -f 1- star_ids.txt 

#nemjo###
while read -r line do

STAR --genomeDir ./STAR_index \
     --readFilesIn $line \
     --outFileNamePrefix mapped \
     --outFilterMultimapNmax 1 \
     --outReadsUnmapped Fastx \
     --twopassMode Basic \
     --runThreadN 15 
     
  done < star_ids.txt
#####
##lehet jó####################
echo *.fastq >star_fastq.txt
cat star_fastq.txt | sed -e 's/\s/,/g' > star_fastqs.txt

cd /home/eszter/exosome_03/exosome_data/STAR_basic
export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64

#ne így mert így egy BAM lesz a végén és nem tudni ki hova tartozott
#STAR -- genomeDir ./STAR_index \
#    -- readFilesIn SRR7288120.fastq,SRR7288121.fastq,SRR7288122.fastq,SRR7288123.fastq,SRR7288124.fastq,SRR7288125.fastq,SRR7288126.fastq,SRR7288127.fastq,SRR7288128.fastq,SRR7288129.fastq,SRR7288130.fastq,SRR7288131.fastq,SRR7288132.fastq,SRR7288133.fastq,SRR7288134.fastq,SRR7288135.fastq,SRR7288136.fastq,SRR7288137.fastq,SRR7288138.fastq,SRR7288139.fastq,SRR7288140.fastq,SRR7288141.fastq,SRR7288142.fastq,SRR7288143.fastq,SRR7288144.fastq,SRR7288145.fastq,SRR7288146.fastq,SRR7288147.fastq,SRR7288148.fastq,SRR7288149.fastq,SRR7288150.fastq,SRR7288151.fastq,SRR7288152.fastq,SRR7288153.fastq,SRR7288154.fastq,SRR7288155.fastq,SRR7288156.fastq,SRR7288157.fastq,SRR7288158.fastq,SRR7288159.fastq,SRR7288160.fastq,SRR7288161.fastq,SRR7288162.fastq,SRR7288163.fastq,SRR7288164.fastq,SRR7288165.fastq,SRR7288166.fastq,SRR7288167.fastq,SRR7288168.fastq,SRR7288169.fastq,SRR7288170.fastq,SRR7288171.fastq,SRR7288172.fastq,SRR7288173.fastq,SRR7288174.fastq,SRR7288175.fastq,SRR7288176.fastq,SRR7288177.fastq,SRR7288178.fastq,SRR7288179.fastq,SRR7288180.fastq \
#    -- outFileNamePrefix mapped \
#    -- outFilterMultimapNmax 1 \
#    -- outReadsUnmapped Fastx \
#    -- twopassMode Basic \
#    -- runThreadN 15 
     
     
 #for ((i = 1; i <= N; i++)); do
 #<loop content>
 #done
  
 #SRR7288120.fastq SRR7288180.fastq
 
 export PATH=$PATH:/data/tools/STAR/bin/Linux_x86_64
  for ((i=20; i<=23; i++)) do  
     
     STAR --genomeDir ./STAR_index \
     --readFilesIn SRR72881$i.fastq \
     --outFileNamePrefix mapped_SRR72881$i \
     --outFilterMultimapNmax 1 \
     --outReadsUnmapped Fastx \
     --twopassMode Basic \
     --runThreadN 15 
     
   done
  
 for ((i=20; i<=80; i++)) do  
     
     STAR --genomeDir ./STAR_index \
     --readFilesIn SRR7288$i.fastq
     --outFileNamePrefix mapped \
     --outFilterMultimapNmax 1 \
     --outReadsUnmapped Fastx \
     --twopassMode Basic \
     --runThreadN 15 
     
   done
     
     
 for f in *.fastq do
 STAR --genomeDir ./STAR_index \
     --readFilesIn $f
     --outFileNamePrefix mapped \
     --outFilterMultimapNmax 1 \
     --outReadsUnmapped Fastx \
     --twopassMode Basic \
     --runThreadN 15 
     
   done
  


#STAR -- genomeDir STARindex \
#      -- readFilesIn ERR458493.fastq \
#      -- outFileNamePrefix mapped \
#      -- outFilterMultimapNmax 1 \
#      -- outReadsUnmapped Fastx \
#      -- outSAMtype BAM SortedByCoordinate \
#      -- twopassMode Basic \
#      -- runThreadN 1 
ls -lh

###visualise###

# R
library(Gviz)


options(ucscChromosomeNames=FALSE)

bam.fajlom = 'mapped*.bam'

illesztes.track = AlignmentsTrack(bam.fajlom, start=2000, end=3000)

plotTracks(
  list(illesztes.track), 
  type=c('coverage', 'pileup'), 
  chromosome='AF086833.2', 
  from=2000, 
  to=3000
)

##vagy###

# R
library(Gviz)
library(Biostrings)

options(ucscChromosomeNames=FALSE)
#nem USCS readeket használunk

#ehhez CAT összeolvasztani ref geneket
ref = readDNAStringSet('Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fsa')


#ez lesz a bam fileom
bam = 'mappedAligned.sortedByCoord.out.bam'

#ez nem kll sztem
chr = 'VII'
s = 534000
e = 534850

tengely.track = GenomeAxisTrack()
#felső tengelyt teszi rá
illesztes.track = AlignmentsTrack(bam, start=s, end=e, chromosome=chr)
#bam fileunnkat felhasználva az illesztési erdményeket gyűjti ki, a coverage-t és pipeline-t(lefedettség)
szekvencia.track = SequenceTrack(ref)
#

plotTracks(
  list(tengely.track, illesztes.track, szekvencia.track), 
  type=c('coverage', 'pileup', 'sashimi'), 
  chromosome=chr, 
  from=s, 
  to=e
)

#sashimi plot mutatja be a relációt

###############
